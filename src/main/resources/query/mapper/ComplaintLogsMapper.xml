<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.huaruan.ud24.query.mapper.ComplaintLogsMapper">
  <resultMap id="BaseResultMap" type="cn.huaruan.ud24.query.entity.ComplaintLogs">
    <id column="log_id" jdbcType="VARCHAR" property="logId" />
    <result column="log_state" jdbcType="INTEGER" property="logState" />
    <result column="log_time" jdbcType="TIMESTAMP" property="logTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="complaint_id" jdbcType="VARCHAR" property="complaintId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, log_state, log_time, remark, user_name, complaint_id
  </sql>
  <select id="selectByExample" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complaint_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complaint_logs
    where log_id = #{logId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complaint_logs
    where log_id = #{logId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogsExample">
    delete from complaint_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogs">
    insert into complaint_logs (log_id, log_state, log_time, 
      remark, user_name, complaint_id
      )
    values (#{logId,jdbcType=VARCHAR}, #{logState,jdbcType=INTEGER}, #{logTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{complaintId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogs">
    insert into complaint_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="logState != null">
        log_state,
      </if>
      <if test="logTime != null">
        log_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="complaintId != null">
        complaint_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        #{logState,jdbcType=INTEGER},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="complaintId != null">
        #{complaintId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogsExample" resultType="java.lang.Long">
    select count(*) from complaint_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complaint_logs
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.logState != null">
        log_state = #{record.logState,jdbcType=INTEGER},
      </if>
      <if test="record.logTime != null">
        log_time = #{record.logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.complaintId != null">
        complaint_id = #{record.complaintId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complaint_logs
    set log_id = #{record.logId,jdbcType=VARCHAR},
      log_state = #{record.logState,jdbcType=INTEGER},
      log_time = #{record.logTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      complaint_id = #{record.complaintId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogs">
    update complaint_logs
    <set>
      <if test="logState != null">
        log_state = #{logState,jdbcType=INTEGER},
      </if>
      <if test="logTime != null">
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="complaintId != null">
        complaint_id = #{complaintId,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.huaruan.ud24.query.entity.ComplaintLogs">
    update complaint_logs
    set log_state = #{logState,jdbcType=INTEGER},
      log_time = #{logTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      complaint_id = #{complaintId,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
</mapper>